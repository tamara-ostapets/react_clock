{"version":3,"sources":["components/Clock/Clock.jsx","App.jsx","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerId","setInterval","tick","clearInterval","props","isClockVisible","setState","console","log","className","hidden","React","Component","App","clockName","oldClockName","hideClock","showClock","setRandomName","prevState","Math","ceil","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MAKEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBANrB,kEASuB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SAAQ,OAXzB,6CAgBIC,cAAcJ,KAAKG,QAhBvB,6BAoBQH,KAAKK,MAAMC,iBACbN,KAAKO,SAAS,CACZV,MAAM,IAAIC,MAAOC,uBAGnBS,QAAQC,IAAIT,KAAKJ,MAAMC,SAzB7B,+BA6BY,IACAA,EAASG,KAAKJ,MAAdC,KACAS,EAAmBN,KAAKK,MAAxBC,eAER,OACE,0BACEI,UAAU,QACVC,QAASL,GAERT,OAtCT,GAA2Be,IAAMC,WCCpBC,G,MAAb,4MACElB,MAAQ,CACNU,gBAAgB,EAChBS,UAAW,WACXC,aAAc,YAJlB,EAOEC,UAAY,WACV,EAAKV,SAAS,CACZD,gBAAgB,KATtB,EAaEY,UAAY,WACV,EAAKX,SAAS,CACZD,gBAAgB,KAftB,EAmBEa,cAAgB,WACd,EAAKZ,UAAS,SAAAa,GAAS,MACrB,CACEJ,aAAcI,EAAUL,UACxBA,UAAWM,KAAKC,KAAqB,GAAhBD,KAAKE,cAI9Bf,QAAQC,IAAR,4CAEI,EAAKb,MAAMoB,aAFf,eAEkC,EAAKpB,MAAMmB,aA7BjD,uDAkCI,OACE,yBAAKL,UAAU,OACb,2CAEA,2CAEG,IAED,kBAAC,EAAD,CACEJ,eAAgBN,KAAKJ,MAAMU,kBAG/B,4BACEkB,KAAK,SACLd,UAAU,SACVe,QAASzB,KAAKmB,eAHhB,mBAOA,4BACEK,KAAK,SACLd,UAAU,aACVe,QAASzB,KAAKiB,WAHhB,cAOA,4BACEO,KAAK,SACLd,UAAU,aACVe,QAASzB,KAAKkB,WAHhB,mBA5DR,GAAyBN,IAAMC,YCA/Ba,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f55fb976.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  static propTypes = {\n    isClockVisible: PropTypes.bool.isRequired,\n  }\n\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.tick(), 1000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.tick);\n  }\n\n  tick() {\n    if (this.props.isClockVisible) {\n      this.setState({\n        time: new Date().toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n    const { isClockVisible } = this.props;\n\n    return (\n      <span\n        className=\"Clock\"\n        hidden={!isClockVisible}\n      >\n        {time}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 'new name',\n    oldClockName: 'old name',\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  setRandomName = () => {\n    this.setState(prevState => (\n      {\n        oldClockName: prevState.clockName,\n        clockName: Math.ceil(Math.random() * 10),\n      }\n    ));\n    // eslint-disable-next-line no-console\n    console.log(\n      `The Clock was renamed from\n      ${this.state.oldClockName} to ${this.state.clockName}`,\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <p>\n          Current time:\n          {' '}\n\n          <Clock\n            isClockVisible={this.state.isClockVisible}\n          />\n        </p>\n        <button\n          type=\"button\"\n          className=\"rename\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n        <button\n          type=\"button\"\n          className=\"hide-clock\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"show-clock\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}